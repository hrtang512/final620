"0","cases_raw <- cases_raw |> select(state, start_date, cases = new_cases) |>"
"0","  mutate(week = epiweek(start_date), year = epiyear(start_date))|> "
"0","  mutate(cases = as.integer(cases)) |> select(-start_date)"
"0",""
"0","hosp_raw <- hosp_raw |> select(jurisdiction, collection_date, hosp = new_covid_19_hospital) |>"
"0","  mutate(week = epiweek(collection_date), year = epiyear(collection_date))|> "
"0","  mutate(hosp = as.integer(hosp)) |> select(-collection_date)|>"
"0","  group_by(jurisdiction, week, year) |>"
"0","  summarise(hosp = sum(hosp))  |> ungroup()"
"1","[38;5;239m`summarise()` has grouped output by 'jurisdiction', 'week'. You can override using the
`.groups` argument.[39m
"
"0","deaths_raw <- deaths_raw |> select(state, year, week = mmwr_week, deaths = covid_19_deaths) |>"
"0","  mutate(year = case_when(str_detect(year, '/') ~ "
"0","           str_extract(year, ""(?<=/)[0-9]+""), # if year contains /, e.g. 2019/2020, then only keep after the /"
"0","         TRUE ~ year)) |> mutate(year = as.numeric(year))  |> "
"0","  mutate(week = as.numeric(week))"
"0",""
"0","deaths_raw = deaths_raw |> "
"0","  mutate("
"0","    year = ifelse(year == 2021 & week == 53, 2020, year)"
"0","  )"
"0",""
"0","vax_raw <- vax_raw |> filter(date_type == 'Admin') |>"
"0","  select(location, date, booster = booster_cumulative, series = series_complete_cumulative) |>"
"0","  mutate(week = epiweek(date), year = epiyear(date))|> "
"0","  mutate(booster = as.integer(booster), series = as.integer(series)) |> select(-date) |> "
"0","  group_by(location, week, year) |>"
"0","  summarise(booster = max(booster), series = max(series))  |> ungroup()"
"1","[38;5;239m`summarise()` has grouped output by 'location', 'week'. You can override using the `.groups`
argument.[39m
"
"0","## Make dates data frame"
"0","all_dates <- data.frame(date = seq(make_date(2020, 1, 25),"
"0","                                   make_date(2021, 12, 31), "
"0","                                   by = ""week"")) |>"
"0","  mutate(date = ceiling_date(date, unit = ""week"", week_start = 7) - days(1)) |>"
"0","  mutate(mmwr_year = epiyear(date), mmwr_week = epiweek(date)) "
"0",""
"0","#Uncomment to run"
"0","dates_and_pop <- cross_join(all_dates, data.frame(state = unique(population$state))) |> left_join(population, by = c(""state"", ""mmwr_year"" = ""year""))"
